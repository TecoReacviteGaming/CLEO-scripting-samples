{$CLEO .csi}
0A90: 0@ = 4 * 100 // We added 100 new variables, can start using it from &0(0@,1i) to &400(0@,1i)
0AC8: 0@ = allocate_memory_size 0@ // Allocating memory for 100 new variables (400 bytes)
0AC7: 33@ = var &0 offset 
0062: 0@ -= 33@ 
0016: 0@ /= 4 // We divide by array size (4 bytes)

thread "Variable Memory Trick"
const // We're defining our extended variables that is beyond the variable limit by memory allocation
    _actor1 = &0(0@,1i)
    _actor2 = &4(0@,1i)
    _actor3 = &8(0@,1i)
    
    _coord1 = &12(0@,1i)
    _coord2 = &16(0@,1i)
    _coord3 = &20(0@,1i)
end

// These are code examples of how to use the extended variables
while true
    wait 0 ms
    0247: load_model 7 
    038B: load_requested_models 
    if 0248:   model 7 available 
    jf continue 
    04C4: store_coords_to _coord1 _coord2 _coord3 from_actor $PLAYER_ACTOR with_offset 0.0 5.0 0.0 
    009A: _actor1 = create_actor_pedtype 4 model 7 at _coord1 _coord2 _coord3 
    009A: _actor2 = create_actor_pedtype 4 model 7 at _coord1 _coord2 _coord3 
    009A: _actor3 = create_actor_pedtype 4 model 7 at _coord1 _coord2 _coord3 
    if and
    056D:   actor _actor1 defined 
    056D:   actor _actor2 defined 
    056D:   actor _actor3 defined 
    jf break
    0762: AS_actor _actor1 dies 
    0762: AS_actor _actor2 dies 
    0762: AS_actor _actor3 dies 
    01C2: remove_references_to_actor _actor1 
    01C2: remove_references_to_actor _actor2 
    01C2: remove_references_to_actor _actor3 
    0249: release_model 7 
    break
end
0AC9: free_allocated_memory 0@ // Free allocated memory, so that it doesn't cause memory leaks (except the script was designed to run forever)
end_thread